
/*
   The sequence of triangle numbers is generated by adding the natural numbers. 
   So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

   1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

   Let us list the factors of the first seven triangle numbers:

1: 1
3: 1,3
6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/

#include <iostream>
#include <cmath>
#include <cstring>
#include <stdio.h>
#include <string.h>

using namespace std;

int nth = 0;
int find_div_triangle( int beforesum, int next)
{
	int sum = beforesum + next;
	nth++;
	int ndiv = 0;
	for( int i=1; i<=sum; i++)
	{
		if(sum%i ==0) {
			ndiv++;
		}

		if(ndiv >= 500) {
			cout << "Found!!!! ndiv=" << ndiv << ", triangle number=" << sum << endl;
			return sum;
		}
	}
	cout << "nth=" << nth << " triangle number=" << sum << " it's ndiv=" << ndiv << endl;
	return find_div_triangle( sum, next+1);
}

int main(int argc, char** argv)
{
	int tri = find_div_triangle( 0, 1);
	return 0;
}
